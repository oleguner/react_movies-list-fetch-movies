{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getMovie","a","fetch","response","json","Promise","reject","Error","FindMovie","setMovies","useState","inputText","setInputText","setMovie","isMovieFound","setMovieState","onSubmit","movieEvent","preventDefault","then","Title","Plot","imdbID","Poster","htmlFor","type","value","onChange","changeEvent","target","id","placeholder","onClick","find","film","App","data","ReactDOM","render","document","getElementById"],"mappings":"0wEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,sCCT3BG,EAAQ,uCAAG,WAAMd,GAAN,eAAAe,EAAA,sEACCC,MAAM,GAAD,OAHlB,+CAGkB,OAAUhB,IADhB,cAChBiB,EADgB,kCAIbA,EAASC,QAJI,yDAMbC,QAAQC,OAAO,IAAIC,MAAJ,QANF,yDAAH,sDCKRC,EAAY,SAAC,GAA2B,IAAzBb,EAAwB,EAAxBA,OAAQc,EAAgB,EAAhBA,UAAgB,EAChBC,mBAAS,IADO,mBAC3CC,EAD2C,KAChCC,EADgC,OAExBF,mBAAS,MAFe,mBAE3Cb,EAF2C,KAEpCgB,EAFoC,OAGZH,oBAAS,GAHG,mBAG3CI,EAH2C,KAG7BC,EAH6B,KAwClD,OACE,oCACE,0BAAMzB,UAAU,aAAa0B,SAhCb,SAACC,GACnBA,EAAWC,iBACXlB,EAASW,GACNQ,MAAK,SAAChB,GACL,IACEU,EAAS,CACP3B,MAAOiB,EAASiB,MAChBjC,YAAagB,EAASkB,KACtBtB,OAAQI,EAASmB,OACjBlC,OAAQe,EAASoB,OACjBlC,QAAQ,8BAAD,OAAgCc,EAASmB,UAElDP,GAAc,GACd,SACAA,GAAc,SAmBhB,yBAAKzB,UAAU,SACb,2BAAOA,UAAU,QAAQkC,QAAQ,eAAjC,eAIA,yBAAKlC,UAAU,WACb,2BACEmC,KAAK,OACLC,MAAOf,EACPgB,SA/CS,SAACC,GACpBb,GAAc,GACdH,EAAagB,EAAYC,OAAOH,QA8CtBI,GAAG,cACHC,YAAY,0BACZzC,UAAWwB,EAAe,kBAAoB,WAIjDA,GAEG,uBAAGxB,UAAU,kBAAb,yCAMN,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEmC,KAAK,SACLnC,UAAU,mBAFZ,iBAQF,yBAAKA,UAAU,WACb,4BACEmC,KAAK,SACLnC,UAAU,oBACV0C,QApDK,WACVrC,EAAOsC,MAAK,SAAAC,GAAI,OAAIA,EAAKnC,SAAWF,EAAME,WACzCe,IACDjB,IAEHY,EAAU,GAAD,mBAAKd,GAAL,CAAaE,KACtBgB,EAAS,MACTD,EAAa,OA0CP,sBAWN,yBAAKtB,UAAU,aACb,wBAAIA,UAAU,SAAd,YACEwB,GAAgBjB,GAEd,kBAAC,EAAcA,M,OC9FdsC,EAAM,WAAO,IAAD,EACKzB,mBAAS0B,GADd,mBAChBzC,EADgB,KACRc,EADQ,KAGvB,OACE,yBAAKnB,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWK,OAAQA,EAAQc,UAAWA,OCV9C4B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.958a68f5.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const URL = 'https://www.omdbapi.com/?apikey=7942a07a&t=';\n\nexport const getMovie = async(title) => {\n  const response = await fetch(`${URL}${title}`);\n\n  try {\n    return response.json();\n  } catch (error) {\n    return Promise.reject(new Error(error));\n  }\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\n\nimport { getMovie } from '../../api/api';\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ movies, setMovies }) => {\n  const [inputText, setInputText] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [isMovieFound, setMovieState] = useState(false);\n\n  const handleChange = (changeEvent) => {\n    setMovieState(false);\n    setInputText(changeEvent.target.value);\n  };\n\n  const searchMovie = (movieEvent) => {\n    movieEvent.preventDefault();\n    getMovie(inputText)\n      .then((response) => {\n        try {\n          setMovie({\n            title: response.Title,\n            description: response.Plot,\n            imdbId: response.imdbID,\n            imgUrl: response.Poster,\n            imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n          });\n          setMovieState(false);\n        } catch {\n          setMovieState(true);\n        }\n      });\n  };\n\n  const addMovie = () => {\n    if (!movies.find(film => film.imdbId === movie.imdbId)\n      && !isMovieFound\n      && movie\n    ) {\n      setMovies([...movies, movie]);\n      setMovie(null);\n      setInputText('');\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={searchMovie}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              value={inputText}\n              onChange={handleChange}\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={isMovieFound ? 'input is-danger' : 'input'}\n            />\n          </div>\n\n          {isMovieFound\n            && (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {!isMovieFound && movie\n          && (\n            <MovieCard {...movie} />\n          )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  setMovies: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie movies={movies} setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}